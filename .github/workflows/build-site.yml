name: Build and Deploy Static Blog


on:
  push:
    branches: [ main ]
    paths:
      - 'blog/**'
      - 'templates/**'
      - 'static/**'
      - 'generate.py'
      - 'requirements.txt'
      - '.github/workflows/build-site.yml'


  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' 
          cache: 'pip' 


      - name: Install dependencies
        run: pip install -r requirements.txt


      - name: Build the static site
        run: python generate.py


      - name: Configure Git User
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for site changes
        id: check_changes
        run: |
          # Add the 'docs' directory to staging
          # This allows `git diff --staged` to see changes made by generate.py
          git add docs/
          # Check if there are any staged changes specifically in docs/
          # If there are changes, `git diff` will exit with 1, otherwise 0
          if ! git diff --staged --quiet --exit-code docs/; then
            echo "Changes detected in docs/ directory."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in docs/ directory."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes_detected == 'true' # Only run if changes were detected
        run: |
          echo "Committing updated docs/ directory..."
          # The commit command will use the changes already staged in the previous step
          git commit -m "Automated build: Update static site files [skip ci]"
          echo "Pushing changes..."
          git push origin main # Adjust branch name if necessary
        # Add [skip ci] to the commit message to prevent this commit from re-triggering the workflow


      - name: No changes detected
        if: steps.check_changes.outputs.changes_detected == 'false'
        run: echo "No changes in 'docs/' directory to commit."